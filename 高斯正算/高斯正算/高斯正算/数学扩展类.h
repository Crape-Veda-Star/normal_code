#pragma once
#include<iostream>
#include<math.h>

class Math_extend
{
public:

public:
	//求导数(derivative)
	//一阶导数
	//double func(double x)
	//{
	//	return x*x;
	//}
	//double first_derivative(double x, double h)//中心差分法求导数
	//x：函数求导值点，h：划分的步长
	//{
	//	double result = (func(x + h) - func(x - h) / 2 * h);
	//}




	//求定积分(definite integral)
	//求一阶定积分
	//double func(double x)
	//{
	//	return x*x;
	//}
	//double A_definite_integral(double (*function)(double), double a, double b, int n)//复化梯形求积法数值积分
	//	//function：被积函数；a：积分下限，b：积分上限，n：区间划分的段数
	//{
	//	double h = (b - a) / n;//h：每一段区间划分的距离长度
	//	double sum = 0;
	//	//或sum=(func(a) + func(b)) / 2.0;
	//	for (int i = 0; i < n; i++)
	//	{
	//		//或sum += func(a + h*i);
	//		sum += h*(func(a + h*i)+func(a+h*(i+1)))/2.0; 
	//	}

	//	return sum;
	//}



private:

};